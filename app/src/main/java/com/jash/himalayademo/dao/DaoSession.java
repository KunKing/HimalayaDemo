package com.jash.himalayademo.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.jash.himalayademo.entities.DiscoveryEntity;
import com.jash.himalayademo.entities.FocusImageEntity;
import com.jash.himalayademo.entities.AlbumEntity;
import com.jash.himalayademo.entities.TrackEntity;
import com.jash.himalayademo.entities.RecommendEntity;

import com.jash.himalayademo.dao.DiscoveryEntityDao;
import com.jash.himalayademo.dao.FocusImageEntityDao;
import com.jash.himalayademo.dao.AlbumEntityDao;
import com.jash.himalayademo.dao.TrackEntityDao;
import com.jash.himalayademo.dao.RecommendEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig discoveryEntityDaoConfig;
    private final DaoConfig focusImageEntityDaoConfig;
    private final DaoConfig albumEntityDaoConfig;
    private final DaoConfig trackEntityDaoConfig;
    private final DaoConfig recommendEntityDaoConfig;

    private final DiscoveryEntityDao discoveryEntityDao;
    private final FocusImageEntityDao focusImageEntityDao;
    private final AlbumEntityDao albumEntityDao;
    private final TrackEntityDao trackEntityDao;
    private final RecommendEntityDao recommendEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        discoveryEntityDaoConfig = daoConfigMap.get(DiscoveryEntityDao.class).clone();
        discoveryEntityDaoConfig.initIdentityScope(type);

        focusImageEntityDaoConfig = daoConfigMap.get(FocusImageEntityDao.class).clone();
        focusImageEntityDaoConfig.initIdentityScope(type);

        albumEntityDaoConfig = daoConfigMap.get(AlbumEntityDao.class).clone();
        albumEntityDaoConfig.initIdentityScope(type);

        trackEntityDaoConfig = daoConfigMap.get(TrackEntityDao.class).clone();
        trackEntityDaoConfig.initIdentityScope(type);

        recommendEntityDaoConfig = daoConfigMap.get(RecommendEntityDao.class).clone();
        recommendEntityDaoConfig.initIdentityScope(type);

        discoveryEntityDao = new DiscoveryEntityDao(discoveryEntityDaoConfig, this);
        focusImageEntityDao = new FocusImageEntityDao(focusImageEntityDaoConfig, this);
        albumEntityDao = new AlbumEntityDao(albumEntityDaoConfig, this);
        trackEntityDao = new TrackEntityDao(trackEntityDaoConfig, this);
        recommendEntityDao = new RecommendEntityDao(recommendEntityDaoConfig, this);

        registerDao(DiscoveryEntity.class, discoveryEntityDao);
        registerDao(FocusImageEntity.class, focusImageEntityDao);
        registerDao(AlbumEntity.class, albumEntityDao);
        registerDao(TrackEntity.class, trackEntityDao);
        registerDao(RecommendEntity.class, recommendEntityDao);
    }
    
    public void clear() {
        discoveryEntityDaoConfig.getIdentityScope().clear();
        focusImageEntityDaoConfig.getIdentityScope().clear();
        albumEntityDaoConfig.getIdentityScope().clear();
        trackEntityDaoConfig.getIdentityScope().clear();
        recommendEntityDaoConfig.getIdentityScope().clear();
    }

    public DiscoveryEntityDao getDiscoveryEntityDao() {
        return discoveryEntityDao;
    }

    public FocusImageEntityDao getFocusImageEntityDao() {
        return focusImageEntityDao;
    }

    public AlbumEntityDao getAlbumEntityDao() {
        return albumEntityDao;
    }

    public TrackEntityDao getTrackEntityDao() {
        return trackEntityDao;
    }

    public RecommendEntityDao getRecommendEntityDao() {
        return recommendEntityDao;
    }

}
